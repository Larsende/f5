---
### DEPLOY AN VIRTUAL SERVICE FROM AN IAPP IN ANSIBLE

# Ensure deployment specific directory exists
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: create directory for environment/deployment
      file: path=../state_cache/{{deploymentName}} state=directory


# Uses Dynamic Inventory to discover Instance IPs
# - hosts: bigips
- hosts: tag_Name_BIG_IP_Autoscale_Instance__demo1[0]
  connection: local
  gather_facts: False
  environment:
      F5_SERVER: "{{ ansible_ssh_host }}"
      F5_USER: "{{ bigip_rest_user }}"
      F5_PASSWORD: "{{ bigip_rest_password }}"  #Inherit from vault
      F5_SERVER_PORT: "{{ bigip_port }}"
      F5_VALIDATE_CERTS: "{{ validate_certs }}"
  # pre_tasks:
  #   - name: Set iApp specific variables if not inheriting
  #     set_fact:
  #         service_name: example
  roles:
    # If using defaults, deploy one role at a time as they all default to same ip:port.
    # Deploy http iApp basic
    # - bigip_iApp_1
    # Deploy http iApp Advanced (waf, iRules, logging profiles, etc. ASM, AVR Modules Required)
    # - bigip_iApp_2
    # Deploy http iApp with WAF and FQDN Pool
    # - bigip_iApp_3
    # Deploy http iApp with WAF and Service Discovery
    - bigip_iApp_4
    # Deploy iAppServices iApp basic
    # - bigip_iApp_5
    # Deploy iAppServices iApp with WAF and FQDN Pool
    # - bigip_iApp_6
  post_tasks:
    - name: Save the running BIG-IP configuration to disk
      delegate_to: localhost
      bigip_config:
        save: True
      register: result