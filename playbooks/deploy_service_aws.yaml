---
# This playbook creates an additional service on an existing Autoscaled BIG-IP Cluster
# for a shared services deployment model
# It creates a Virtual Service on a different port
# ex.
# 0.0.0.0:81
# 0.0.0.0:82
# 0.0.0.0:83
# It creates a LB to serve as Port Address Translation function
# It points the LB at the shared services Autoscaled BIG-IP Cluster

# Ensure deployment specific directory exists
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: create directory for environment/deployment
      file: path=../state_cache/{{deploymentName}} state=directory


- hosts: localhost
  connection: local
  gather_facts: False
  pre_tasks:
    - name: Set cft state to present
      set_fact:
          cft_state: "present"
          sshKey: "{{aws_ssh_key_name}}"  #Inherit from vault
          net_stack: "{{ lookup('file', install_path + '/state_cache/' + deploymentName + '/net-cft-output.yaml') | from_yaml }}"
          bigip_stack: "{{ lookup('file', install_path + '/state_cache/' + deploymentName + '/bigip-cft-output.yaml') | from_yaml }}"
    - name: Set some variables from stack outputs
      set_fact:
          vpc: "{{ net_stack['stack_outputs']['vpc'] }}"
          applicationSubnets: "{{ net_stack['stack_outputs']['applicationSubnets'] }}"
          subnets: "{{ net_stack['stack_outputs']['subnets'] }}"
          bigipAutoscaleGroup: "{{ bigip_stack['stack_outputs']['bigipAutoscaleGroup'] }}"
  roles:
    - app_aws_cft 
    - external_lb_aws_cft
    - update_bigip_asg

# Uses Dynamic Inventory to discover Instance IPs
# - hosts: bigips
- hosts: tag_Name_BIG_IP_Autoscale_Instance__demo1[0]
  connection: local
  gather_facts: False
  environment:
      F5_SERVER: "{{ ansible_ssh_host }}"
      F5_USER: "{{ bigip_rest_user }}"
      F5_PASSWORD: "{{ bigip_rest_password }}"  #Inherit from vault
      F5_SERVER_PORT: "{{ bigip_port }}"
      F5_VALIDATE_CERTS: "{{ validate_certs }}"
  pre_tasks:
    - name: Grab App Pool Member Info
      set_fact:
          app_stack: "{{ lookup('file', install_path + '/state_cache/' + deploymentName + '/' + service_name + '-app-cft-output.yaml') | from_yaml }}"
    - name: Grab App Autoscale Group 2
      set_fact:
          applicationPoolTagValue: "{{ app_stack['stack_outputs']['appAutoscaleGroupName'] }}"
  roles:
    # If using defaults, deploy one role at a time as they all default to same ip:port.
    # Deploy http iApp basic
    # - bigip_iApp_1
    # Deploy http iApp Advanced (waf, irules, logging profiles, etc. ASM, AVR Modules Required)
    # - bigip_iApp_2
    # Deploy http iApp with WAF and FQDN Pool
    # - bigip_iApp_3
    # Deploy http iApp with WAF and Service Discovery
    - bigip_iApp_4
  post_tasks:
    - name: Save the running BIG-IP configuration to disk
      delegate_to: localhost
      bigip_config:
        save: True
      register: result