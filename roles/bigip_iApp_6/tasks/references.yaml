---

- name: Building REST payload for the asm loggging profile to remote analytics server
  template: src="asm_logging_profile_payload.j2" dest="{{ install_path }}/state_cache/{{ deploymentName }}/asm_logging_profile_payload-{{ service }}.json"
  delegate_to: localhost

- name: Deploying/updating ASM Logging Profile to send to Remote Analytics Server
  delegate_to: localhost
  bigip_rest_wrapper:
      state=present
      host={{ ansible_ssh_host }}
      port={{ bigip_port }}
      user={{ bigip_user }}
      password={{ bigip_password }}
      collection_path="mgmt/tm/security/log/profile"
      payload_file="{{ install_path }}/state_cache/{{ deploymentName }}/asm_logging_profile_payload-{{ service }}.json"
      resource_key="name"

- name: Import and activate ASM policy
  delegate_to: localhost
  bigip_asm_policy:
    name: "{{ asm_policy_name }}"
    file: "{{ role_path }}/files/asm-policy-{{asm_policy_name}}.xml"
    active: yes
    state: present


# Added Step to Publish to Drafts first for v12
- name: Create an LTM policy for use with by iApp which associates the ASM policy
  delegate_to: localhost
  bigip_rest_wrapper:
      name="Create an LTM policy for use with by iApp which associates the ASM policy"
      state=present
      host={{ ansible_ssh_host }}
      port={{ bigip_port }}
      user={{ bigip_user }}
      password={{ bigip_password }}
      collection_path='mgmt/tm/ltm/policy'
      payload='{"name":"{{ ltm_policy_name }}","partition":"Common","subPath":"Drafts","controls":["asm"],"requires":["http"],"strategy":"/Common/first-match","rules":[{"name":"rule-1","ordinal":1,"actions":[{"name":"0","asm":true,"code":0,"enable":true,"policy":"/Common/{{ asm_policy_name }}","port":0,"request":true,"status":0,"vlanId":0}],"conditions":[]}]}'
      resource_key="name"

- name: Publish the LTM policy
  delegate_to: localhost
  bigip_rest_wrapper:
      name="Publish the LTM policy"
      state=present
      host={{ ansible_ssh_host }}
      port={{ bigip_port }}
      user={{ bigip_user }}
      password={{ bigip_password }}
      collection_path='mgmt/tm/ltm/policy'
      payload='{"name":"{{ ltm_policy_name }}","command":"publish"}'
      resource_key="name"



